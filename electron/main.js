const { app, BrowserWindow, dialog } = require('electron');
const path = require('path');
const { autoUpdater } = require('electron-updater');

const isDev = !app.isPackaged;

let win;

function createWindow() {
    win = new BrowserWindow({
        width: 1200,
        height: 800,
        icon: path.join(__dirname, '../assets/images/logo-desktop.ico'),
        webPreferences: {
            preload: path.join(__dirname, 'preload.js'),
            nodeIntegration: true,          // üëà –¥–æ–±–∞–≤–ª—è–µ–º
            contextIsolation: false,         // üëà –∏ —ç—Ç–æ
            webSecurity: false, // üëà –¥–æ–±–∞–≤–ª—è–µ–º –≠–¢–û
        },
    });

    win.webContents.openDevTools();

    if (isDev) {
        win.loadURL('http://localhost:5173');
    } else {
        const filePath = path.join(__dirname, '../dist/index.html');
        console.log('üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞:', filePath);
        win.loadURL(`file://${filePath}`);
    }
}

app.whenReady().then(() => {
    createWindow();

    win.webContents.on('did-fail-load', (event, errorCode, errorDescription) => {
        console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É:', errorDescription);
    });

    if (!isDev) {
        autoUpdater.checkForUpdates();

        autoUpdater.on('update-available', () => {
            console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ');
        });

        autoUpdater.on('update-downloaded', () => {
            console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫...');
            dialog
                .showMessageBox(win, {
                    type: 'info',
                    title: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ',
                    message: '–î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ.',
                    buttons: ['–û–ö'],
                })
                .then(() => {
                    autoUpdater.quitAndInstall();
                });
        });

        autoUpdater.on('error', (err) => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏:', err);
        });
    }
});